cmake_minimum_required(VERSION 3.0.0)
project(lightssl VERSION 0.1.0)

include(CTest)
enable_testing()

set(CMAKE_CONFIGURATION_TYPES Release)

set(CMAKE_DEBUG_POSTFIX debug)
set(CMAKE_RELEASE_POSTFIX release)

# Pthread
set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
set(THREADS_PREFER_PTHREAD_FLAG TRUE)
find_package(Threads REQUIRED)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99 -Wno-unused-variable -Wno-unused-function -Wall -Wextra -Wno-unused-parameter -pedantic -pthread -O3")

add_library(lighttools OBJECT src/lighttools.c)
add_library(lighthash OBJECT src/lighthash.c)
add_library(lightkeys OBJECT src/lightkeys.c)
add_library(lightcrypto OBJECT src/lightcrypto.c)
add_library(lightciphers OBJECT src/lightciphers.c)

if ( CMAKE_BUILD_TYPE STREQUAL Debug )
add_executable(test_hash3 src/tests/test_lighthash3.c)
add_executable(test_hash3_shake src/tests/test_lighthash3_shake.c)
add_executable(test_ciphers_cbc src/tests/test_lightciphers_cbc.c)
add_executable(test_ciphers_cfb src/tests/test_lightciphers_cfb.c)
add_executable(test_crypto src/tests/test_lightcrypto.c)
add_executable(test_crypto_cli src/tests/test_lightcrypto_cli.c)
add_executable(test_crypto_srv src/tests/test_lightcrypto_srv.c)
add_executable(test_keys src/tests/test_lightkeys.c)

target_link_libraries(test_hash3 PUBLIC lighthash lighttools PRIVATE m)
target_link_libraries(test_hash3_shake PUBLIC lighthash lighttools PRIVATE m)
target_link_libraries(test_ciphers_cbc PUBLIC lightciphers PRIVATE m)
target_link_libraries(test_ciphers_cfb PUBLIC lightciphers PRIVATE m)
target_link_libraries(test_crypto PUBLIC lightcrypto lighttools PRIVATE m)
target_link_libraries(test_crypto_cli PUBLIC lightcrypto PRIVATE m)
target_link_libraries(test_crypto_srv PUBLIC lightcrypto PRIVATE m)
target_link_libraries(test_keys PUBLIC lightkeys lighttools PRIVATE m)

add_test(NAME test_hash3 COMMAND test_hash3)
add_test(NAME test_hash3_shake COMMAND test_hash3_shake)
add_test(NAME test_ciphers_cbc COMMAND test_ciphers_cbc)
add_test(NAME test_ciphers_cfb COMMAND test_ciphers_cfb)
add_test(NAME test_crypto COMMAND test_crypto ca.key ca256.cms)
add_test(NAME test_keys COMMAND test_keys)
endif()

if ( CMAKE_BUILD_TYPE STREQUAL Release )
add_executable(test_hash3 src/tests/test_lighthash3.c)
add_executable(test_hash3_shake src/tests/test_lighthash3_shake.c)
add_executable(test_ciphers_cbc src/tests/test_lightciphers_cbc.c)
add_executable(test_ciphers_cfb src/tests/test_lightciphers_cfb.c)
add_executable(test_crypto src/tests/test_lightcrypto.c)
add_executable(test_crypto_cli src/tests/test_lightcrypto_cli.c)
add_executable(test_crypto_srv src/tests/test_lightcrypto_srv.c)
add_executable(test_keys src/tests/test_lightkeys.c)

target_link_libraries(test_hash3 PUBLIC lighthash lighttools PRIVATE m)
target_link_libraries(test_hash3_shake PUBLIC lighthash lighttools PRIVATE m)
target_link_libraries(test_ciphers_cbc PUBLIC lightciphers PRIVATE m)
target_link_libraries(test_ciphers_cfb PUBLIC lightciphers PRIVATE m)
target_link_libraries(test_crypto PUBLIC lightcrypto lighttools PRIVATE m)
target_link_libraries(test_crypto_cli PUBLIC lightcrypto PRIVATE m)
target_link_libraries(test_crypto_srv PUBLIC lightcrypto PRIVATE m)
target_link_libraries(test_keys PUBLIC lightkeys lighttools PRIVATE m)

add_test(NAME test_hash3 COMMAND test_hash3)
add_test(NAME test_hash3_shake COMMAND test_hash3_shake)
add_test(NAME test_ciphers_cbc COMMAND test_ciphers_cbc)
add_test(NAME test_ciphers_cfb COMMAND test_ciphers_cfb)
add_test(NAME test_crypto COMMAND test_crypto ca.key ca256.cms)
add_test(NAME test_keys COMMAND test_keys)
endif()

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
